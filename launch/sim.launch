<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/empty.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- start adding your files -->
  <!-- RRT* Path Planning Node -->

    <!-- ROS Map Server for Occupancy Grid -->
    <node pkg="map_server" type="map_server" name="map_server"
        args="$(find static_rrt)/world/EmptyWorld/map.yaml" />

    <!-- RRT* Path Planning Node -->
    <node pkg="static_rrt" type="main.py" name="rrt_path_planner" output="screen"/>

    <!-- Controller Node -->
    <node pkg="static_rrt" type="controller_static.py" name="controller" output="screen"/>

    <!-- Map Listener -->
    <node pkg="static_rrt" type="occupancy_grid.py" name="map_listener" output="screen"/>

</launch>
